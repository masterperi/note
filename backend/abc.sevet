const express = require('express');
const mongoose = require('mongoose');
const multer = require('multer');
const cors = require('cors');

const app = express();
app.use(cors());

// MongoDB Connection
mongoose.connect('mongodb://localhost:27017/subjectData', {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => console.log("MongoDB Connected"))
  .catch(err => console.error("MongoDB Error:", err));

// Mongoose Schema
const SubjectSchema = new mongoose.Schema({
  userID: String,
  subjectCode: String,
  subjectTitle: String,
  tags: [String],
  semester: String,
  description: String,
  file: {
    data: Buffer,
    contentType: String,
    fileName: String
  }
});

const Subject = mongoose.model('Subject', SubjectSchema);

// Use memory storage to store file in RAM before saving to MongoDB
const storage = multer.memoryStorage();
const upload = multer({ storage: storage });

// Upload endpoint
app.post('/upload', upload.single('file'), async (req, res) => {
  const {
    userID,
    subjectCode,
    subjectTitle,
    tags,
    semester,
    description
  } = req.body;

  try {
    const newSubject = new Subject({
      userID,
      subjectCode,
      subjectTitle,
      tags: tags.split(',').map(tag => tag.trim()),
      semester,
      description,
      file: {
        data: req.file.buffer,
        contentType: req.file.mimetype,
        fileName: req.file.originalname
      }
    });

    await newSubject.save();
    res.json({ message: 'PDF uploaded and stored in MongoDB successfully' });
  } catch (err) {
    console.error(err);
    res.status(500).json({ message: 'Upload failed', error: err.message });
  }
});

// Endpoint to retrieve and view PDF by document ID
app.get('/file/:id', async (req, res) => {
  try {
    const subject = await Subject.findById(req.params.id);
    if (!subject) return res.status(404).send("File not found");

    res.set({
      'Content-Type': subject.file.contentType,
      'Content-Disposition': inline; filename="${subject.file.fileName}",
    });

    res.send(subject.file.data);
  } catch (err) {
    res.status(500).send("Error retrieving file");
  }
});


// âœ… New endpoint to get all PDFs
app.get('/files', async (req, res) => {
  try {
    const subjects = await Subject.find();
    const files = subjects.map(subject => ({
      id: subject._id,
      fileName: subject.file.fileName,
      contentType: subject.file.contentType
    }));
    res.json(files);
  } catch (err) {
    res.status(500).json({ message: "Error fetching files" });
  }
});


// Start server
app.listen(3000, () => {
  console.log("Server running on http://localhost:3000");
});